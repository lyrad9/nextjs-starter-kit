import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Header from "@/components/layout/header";
import { cn } from "@/lib/utils";
import { CircleX } from "lucide-react";
import { CircleCheckIcon } from "lucide-react";
import { Toaster as Sonner } from "sonner";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
  modal,
}: Readonly<{
  children: React.ReactNode;
  modal?: React.ReactNode;
}>) {
  return (
    <html suppressHydrationWarning lang="en" className="h-full">
      <body
        suppressHydrationWarning
        className={cn(
          geistSans.variable,
          geistMono.variable,

          "antialiased h-full w-full bg-background font-sans text-foreground flex flex-col"
        )}
      >
        {/*  <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        > */}
        <Header />
        <main className="flex-1">{children}</main>
        {modal}
        <Sonner
          toastOptions={{
            classNames: {
              closeButton: "",
              title: "text-sm",
              default: "text-blue-500",
              icon: "",
              success: "border border-green-400 bg-background text-green-400",
              error: "border-2 border-red-400 bg-background text-red-400",
            },
          }}
          closeButton
          className=""
          icons={{
            info: <CircleX className="size-5" />,
            error: <CircleX className="size-5" />,
            success: <CircleCheckIcon className="" />,
          }}
        />
        {/*    </ThemeProvider> */}
      </body>
    </html>
  );
}
